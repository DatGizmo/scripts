#!/bin/bash

# Approach for the new api, but this is very slow
#cmd=$(curl -s -H "Authorization: Bearer ts0uqmsefzrjrh04gtizfkk48bbtjg" -X GET https://api.twitch.tv/helix/users/follows\?from_id\=142334830\&first=100)

#while read -r val ;do
#	list=$(curl -s -H "Authorization: Bearer ts0uqmsefzrjrh04gtizfkk48bbtjg" -X GET https://api.twitch.tv/helix/streams\?user_id=$val)
#	while read -r stream;do
#		echo $stream
#	done < <(echo $list | jq -rc '.data[].user_name,.data[].title')
#done < <(echo $cmd | jq -rc '.data[].to_id' )

# v5 api, soon to be deprecated.
request=$(curl -s -H "Authorization: OAuth ts0uqmsefzrjrh04gtizfkk48bbtjg" https://api.twitch.tv/kraken/streams/followed) 

readarray -t tt < <(echo $request | jq -rc '.streams | to_entries | .[] | "[\(.key)]\\ \(.value.channel.display_name)\\ \(.value.channel.status)\\ \(.value.channel.game)\\"')

for i in "${tt[@]}"
do
	readarray -d '\' -t tc < <(echo $i)
	echo -e "\e[32m${tc[0]}${tc[1]}:"
	echo -e "\e[33m    ${tc[2]}"
	echo -e "\e[31m    ${tc[3]}"
done

if [[ "$1" == "-l" ]]
then
	echo -e "\e[0m"
	echo -n "Select stream to launch: "
	read inp
	if [[ "$inp" =~ ^[0-9]+$ ]]
	then
		if [[ ${#tt[@]} -gt $inp ]]
		then
			readarray -d '\' -t tc < <(echo ${tt[$inp]})
			livestream ${tc[1]} $2 -q &
		fi
	fi
fi
